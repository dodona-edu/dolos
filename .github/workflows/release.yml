name: Release Package

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["16"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Check version strings
        run: |
          # version strings should be only numbers and dots
          # and not contain '-dev' for example
          valid=true
          if ! jq -e '.version| test("^[0-9.]+$")' cli/package.json >/dev/null; then
              echo "CLI package has invalid version string"
              valid=false
          fi
          if ! jq -e '.dependencies."@dodona/dolos-web" | test("^[0-9.]+$")' cli/package.json >/dev/null; then
              echo "CLI dependency dolos-web has invalid version string"
              valid=false
          fi
          if ! jq -e '.dependencies."@dodona/dolos-lib" | test("^[0-9.]+$")' cli/package.json >/dev/null; then
              echo "CLI dependency dolos-lib has invalid version string"
              valid=false
          fi
          if ! jq -e '.version | test("^[0-9.]+$")' web/package.json >/dev/null; then
              echo "Web package has invalid version string"
              valid=false
          fi
          if ! jq -e '.version | test("^[0-9.]+$")' lib/package.json >/dev/null; then
              echo "Lib package has invalid version string"
              valid=false
          fi
          if ! $valid; then
              exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Fetch dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/*/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('/yarn.lock') }}-${{ hashFiles('/package.json') }}
      - name: Check if cache was hit
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          echo "Should have hit cache"
          exit 1

      - name: Parse tag
        id: parse_tag
        run: "echo ${{ github.ref }} | sed 's#^refs/tags/#::set-output name=version::#'"
      - name: Create release
        id: create_release
        uses: release-drafter/release-drafter@v5
        with:
          name: ${{ steps.parse_tag.outputs.version }}
          tag: ${{ steps.parse_tag.outputs.version }}
          version: ${{ steps.parse_tag.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build lib
        run: |
          cd lib/
          yarn build
      - name: Build CLI
        run: |
          cd cli/
          yarn build --force
      - name: Build web
        run: |
          cd web/
          yarn build
      - name: Publish @dodona/dolos-lib to NPM
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_AUTH_TOKEN }}
          package: ./lib/package.json
          check-version: true
          access: public
      - name: Publish @dodona/dolos-web to NPM
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_AUTH_TOKEN }}
          package: ./web/package.json
          check-version: true
          access: public
      - name: Publish @dodona/dolos to NPM
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_AUTH_TOKEN }}
          package: ./cli/package.json
          check-version: true
          access: public
  demo:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install dolos
        run: |
          npm install -g @dodona/dolos
          dolos --version
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "$KNOWN_HOSTS" > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}
      - name: Prepare analysis
        run: |
          mkdir analysis
          cd analysis
          rsync \
              -e 'ssh -p 4840' \
              dodona@dolos.ugent.be:soco-with-labels.zip \
              .
          unzip soco-with-labels.zip
      - name: Run analysis on samples
        run: |
          cd analysis
          dolos -l javascript -f csv -o samples-results samples/*.js
      - name: Run analysis on Java files
        run: |
          cd analysis
          dolos -l java -f csv -o java-results java-labels.csv
      - name: Run analysis on C files
        run: |
          cd analysis
          dolos -l c -f csv -o c-results c-labels.csv
      - name: Deploy results to demo site
        run: |
          cd analysis
          npm pack @dodona/dolos-web
          tar xzf dodona-dolos-web-*.tgz
          mkdir -p demo/soco
          cp -r package/dist demo/sample
          cp -r package/dist demo/soco/java
          cp -r package/dist demo/soco/c
          mv samples-results demo/sample/data
          mv java-results demo/soco/java/data
          mv c-results demo/soco/c/data
          rsync -glpPrtvz \
              -e 'ssh -p 4840' \
              demo/ \
              dodona@dolos.ugent.be:demo

  docker:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Parse tag (without v)
        id: parse_tag
        run: "echo ${{ github.ref }} | sed 's#^refs/tags/v#::set-output name=version::#'"
      - name: Build the new image
        run: docker build docker/ -t ghcr.io/dodona-edu/dolos:${{ steps.parse_tag.outputs.version }}
      - name: Login to the container registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      - name: Tag the new image with latest
        run: docker tag ghcr.io/dodona-edu/dolos:${{ steps.parse_tag.outputs.version }} ghcr.io/dodona-edu/dolos:latest
      - name: Push the new image
        run: docker push --all-tags ghcr.io/dodona-edu/dolos
